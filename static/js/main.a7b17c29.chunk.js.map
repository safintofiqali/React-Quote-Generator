{"version":3,"sources":["components/quote-card/QuoteCard.Comp.jsx","components/quote-list/QuoteList.Comp.jsx","App.js","reportWebVitals.js","index.js"],"names":["QuoteCard","props","quote","author","text","className","QuoteList","quotes","map","index","App","state","searchField","fetch","then","response","json","setState","this","filteredQuotes","filter","toLowerCase","includes","console","log","type","placeholder","onChange","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAaeA,MAVf,SAAoBC,GAChB,MAAsBA,EAAMC,MAArBC,EAAP,EAAOA,OAAOC,EAAd,EAAcA,KACd,OACI,sBAAKC,UAAU,aAAf,UACI,qBAAKA,UAAU,SAAf,SAAyBF,IACzB,qBAAKE,UAAU,OAAf,SAAuBD,Q,MCMpBE,MAVf,SAAmBL,GACf,OACI,qBAAKI,UAAU,aAAf,SAEIJ,EAAMM,OAAOC,KAAI,SAACN,EAAMO,GAAP,OAAiB,cAAC,EAAD,CAAuBP,MAAOA,GAAdO,SC8B/CC,G,wDAjCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXJ,OAAQ,GACRK,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,+BACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACP,GAAD,OAAY,EAAKU,SAAS,CAAEV,OAAQA,S,oBAG9C,WAAU,IAAD,OACP,EAAgCW,KAAKP,MAA7BJ,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACVO,EAAiBZ,EAAOa,QAAO,SAAClB,GAAD,uBACnCA,EAAMC,cAD6B,aACnC,EAAckB,cAAcC,SAASV,EAAYS,kBAGnD,OACE,sBAAKhB,UAAU,MAAf,UACGkB,QAAQC,IAAIL,GACb,uBACEM,KAAK,SACLC,YAAY,2BACZC,SAAU,SAACC,GAAD,OAAO,EAAKX,SAAS,CAAEL,YAAagB,EAAEC,OAAOC,WAEzD,cAAC,EAAD,CAAWvB,OAAQY,W,GA7BTY,cCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a7b17c29.chunk.js","sourcesContent":["import React from 'react';\nimport \"./QuoteCard.Style.css\";\n\nfunction QuoteCard (props) {\n    const {author,text} = props.quote;\n    return (\n        <div className='quote-card'>\n            <div className=\"author\">{author}</div>\n            <div className=\"text\">{text}</div>\n        </div>\n    )\n}\n\nexport default QuoteCard;","import React from \"react\";\nimport QuoteCard from \"../quote-card/QuoteCard.Comp\";\nimport \"./QuoteList.Style.css\";\n\nfunction QuoteList(props) {\n    return (\n        <div className=\"quote-list\">\n            {\n            props.quotes.map((quote,index) => <QuoteCard key={index} quote={quote}/>)\n            }\n        </div>\n    )\n}\n\nexport default QuoteList;","import React, { Component } from \"react\";\nimport QuoteList from \"./components/quote-list/QuoteList.Comp\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      quotes: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://type.fit/api/quotes\")\n      .then((response) => response.json())\n      .then((quotes) => this.setState({ quotes: quotes }));\n  }\n\n  render() {\n    const { quotes, searchField } = this.state;\n    const filteredQuotes = quotes.filter((quote) =>\n      quote.author?.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"app\">\n        {console.log(filteredQuotes)}\n        <input\n          type=\"search\"\n          placeholder=\"Search for author quotes\"\n          onChange={(e) => this.setState({ searchField: e.target.value })}\n        />\n        <QuoteList quotes={filteredQuotes} />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}